[versions]
agp = "8.4.0"
kotlin = "1.9.0"
coreKtx = "1.13.1"
junit = "4.13.2"
junitVersion = "1.1.5"
espresso = "3.5.1"
appcompat = "1.7.0"
material = "1.12.0"
activity = "1.9.0"
constraintlayout = "2.1.4"
navigationFragmentKtx = "2.7.7"
navigationUiKtx = "2.7.7"

gradlePlugin = "1.9.0"
googleServices = "4.4.2"
firebaseBom = "32.3.1"
firebaseUiAuth = "8.0.2"
firebaseAuthKtx = "21.2.0"
safeArgs = "2.7.7"
swipeRefresh = "1.1.0"
fragment = "1.2.0-alpha01"
lifecycle = "2.2.0-alpha02"
preference = "1.1.0-rc01"
lifecycleExtensions = "2.2.0"
room = "2.6.1"
koin = "3.4.0"
playLocation = "21.0.1"
playMaps = "18.1.0"
archTesting = "2.2.0"
coroutines = "1.6.4"
robolectric = "4.3.1"
truth = "1.1.3"
mockito = "5.2.0"
testCore = "1.5.0"
testExt = "1.1.5"
testRules = "1.5.0"
dexmaker = "2.28.3"
fragmentTesting = "1.5.6"
mapsPlatformSecrets = "2.0.1"

[libraries]

# Android
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" }
androidx-swiperefresh-layout = { group = "androidx.swiperefreshlayout", name = "swiperefreshlayout", version.ref = "swipeRefresh" }

# Kotlin

# UI
material = { group = "com.google.android.material", name = "material", version.ref = "material" }
androidx-constraintlayout = { group = "androidx.constraintlayout", name = "constraintlayout", version.ref = "constraintlayout" }

# Architecture & Lifecycle Components
androidx-activity = { group = "androidx.activity", name = "activity", version.ref = "activity" }
androidx-fragment = { group = "androidx.fragment", name = "fragment-ktx", version.ref = "fragment" }
androidx-lifecycle-extensions = { group = "androidx.lifecycle", name = "lifecycle-extensions", version.ref = "lifecycleExtensions"}
androidx-lifecycle-livedata = { group = "androidx.lifecycle", name = "lifecycle-livedata-ktx", version.ref = "lifecycle" }
androidx-lifecycle-viewmodel = { group = "androidx.lifecycle", name = "lifecycle-viewmodel-ktx" }
androidx-preference = { group = "androidx.preference", name = "preference-ktx", version.ref = "preference" }

# Navigation
androidx-navigation-fragment-ktx = { group = "androidx.navigation", name = "navigation-fragment-ktx", version.ref = "navigationFragmentKtx" }
androidx-navigation-ui-ktx = { group = "androidx.navigation", name = "navigation-ui-ktx", version.ref = "navigationUiKtx" }

# Koin
koin = { group = "io.insert-koin", name = "koin-android", version.ref = "koin" }

# Room
androidx-room-runtime = { group = "androidx.room", name = "room-runtime", version.ref = "room" }
androidx-room-ktx = { group = "androidx.room", name = "room-ktx", version.ref = "room" }
androidx-room-compiler = { group = "androidx.room", name = "room-compiler", version.ref = "room" }

# Maps & Geofencing
google-play-location = { group = "com.google.android.gms", name = "play-services-location", version.ref = "playLocation" }
google-play-maps = { group = "com.google.android.gms", name = "play-services-maps", version.ref = "playMaps" }

#Firebase
firebase-ui-auth = { group = "com.firebaseui", name = "firebase-ui-auth", version.ref = "firebaseUiAuth" }
firebase-auth-ktx = { group = "com.google.firebase", name = "firebase-auth-ktx", version.ref = "firebaseAuthKtx"}

# Testing
junit = { group = "junit", name = "junit", version.ref = "junit" }
androidx-test-core = { group = "androidx.test", name = "core", version.ref = "testCore" }
androidx-test-core-ktx = { group = "androidx.test", name = "core-ktx", version.ref = "testCore" }
androidx-test-ext = { group = "androidx.test.ext", name = "junit-ktx", version.ref = "testExt" }
androidx-test-rules = { group = "androidx.test", name = "rules", version.ref = "testRules" }
kotlinx-coroutines-test = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-test", version.ref = "coroutines" }
mockito = { group = "org.mockito", name = "mockito-core", version.ref = "mockito" }
androidx-fragment-testing = { group = "androidx.fragment", name = "fragment-testing", version.ref = "fragmentTesting" }

# Unit Testing
androidx-arch-core-testing = { group = "androidx.arch.core", name = "core-testing", version.ref = "archTesting" }
kotlinx-coroutines-android = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-android", version.ref = "coroutines" }
robolectric = { group = "org.robolectric", name = "robolectric", version.ref = "robolectric" }
robolectric-annotations = { group = "org.robolectric", name = "annotations", version.ref = "robolectric" }
google-truth = { group = "com.google.truth", name = "truth", version.ref = "truth" }
room-testing = { group = "androidx.room", name = "room-testing", version.ref = "room" }

 # Instrumentation Testing (Android)
androidx-junit = { group = "androidx.test.ext", name = "junit", version.ref = "junitVersion" }
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espresso" }
androidx-espresso-contrib = { group = "androidx.test.espresso", name = "espresso-contrib", version.ref = "espresso" }
androidx-espresso-intents = { group = "androidx.test.espresso", name = "espresso-intents", version.ref = "espresso" }
androidx-espresso-idling-resource = { group = "androidx.test.espresso", name = "espresso-idling-resource", version.ref = "espresso" }
androidx-espresso-idling-concurrent = { group = "androidx.test.espresso.idling", name = "idling-concurrent", version.ref = "espresso" }
dexmaker = { group = "com.linkedin.dexmaker", name = "dexmaker-mockito", version.ref = "dexmaker" }


[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
jetbrains-kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-gradle-plugin = { id = "org.jetbrains.kotlin.gradle.plugin", version.ref = "kotlin" }
google-services = { id = "com.google.gms.google-services", version.ref = "googleServices" }
androidx-safe-args = { id = "androidx.navigation.safeargs.kotlin", version.ref = "safeArgs" }
kotlin-kapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" }
mapsplatform-secrets-gradle = { id = "com.google.android.libraries.mapsplatform.secrets-gradle-plugin", version.ref = "mapsPlatformSecrets" }

